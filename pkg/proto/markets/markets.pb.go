// Code generated by protoc-gen-go. DO NOT EDIT.
// source: markets.proto

package markets

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MarketType int32

const (
	MarketType_YESNO       MarketType = 0
	MarketType_CATEGORICAL MarketType = 1
	MarketType_SCALAR      MarketType = 2
)

var MarketType_name = map[int32]string{
	0: "YESNO",
	1: "CATEGORICAL",
	2: "SCALAR",
}
var MarketType_value = map[string]int32{
	"YESNO":       0,
	"CATEGORICAL": 1,
	"SCALAR":      2,
}

func (x MarketType) String() string {
	return proto.EnumName(MarketType_name, int32(x))
}
func (MarketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{0}
}

type ReportingState int32

const (
	ReportingState_PRE_REPORTING                ReportingState = 0
	ReportingState_DESIGNATED_REPORTING         ReportingState = 1
	ReportingState_OPEN_REPORTING               ReportingState = 2
	ReportingState_CROWDSOURCING_DISPUTE        ReportingState = 3
	ReportingState_AWAITING_NEXT_WINDOW         ReportingState = 4
	ReportingState_AWAITING_FINALIZATION        ReportingState = 5
	ReportingState_FINALIZED                    ReportingState = 6
	ReportingState_FORKING                      ReportingState = 7
	ReportingState_AWAITING_NO_REPORT_MIGRATION ReportingState = 8
	ReportingState_AWAITING_FORK_MIGRATION      ReportingState = 9
)

var ReportingState_name = map[int32]string{
	0: "PRE_REPORTING",
	1: "DESIGNATED_REPORTING",
	2: "OPEN_REPORTING",
	3: "CROWDSOURCING_DISPUTE",
	4: "AWAITING_NEXT_WINDOW",
	5: "AWAITING_FINALIZATION",
	6: "FINALIZED",
	7: "FORKING",
	8: "AWAITING_NO_REPORT_MIGRATION",
	9: "AWAITING_FORK_MIGRATION",
}
var ReportingState_value = map[string]int32{
	"PRE_REPORTING":                0,
	"DESIGNATED_REPORTING":         1,
	"OPEN_REPORTING":               2,
	"CROWDSOURCING_DISPUTE":        3,
	"AWAITING_NEXT_WINDOW":         4,
	"AWAITING_FINALIZATION":        5,
	"FINALIZED":                    6,
	"FORKING":                      7,
	"AWAITING_NO_REPORT_MIGRATION": 8,
	"AWAITING_FORK_MIGRATION":      9,
}

func (x ReportingState) String() string {
	return proto.EnumName(ReportingState_name, int32(x))
}
func (ReportingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{1}
}

type MarketsSummary struct {
	Block                      uint64    `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	TotalMarkets               uint64    `protobuf:"varint,2,opt,name=total_markets,json=totalMarkets,proto3" json:"total_markets,omitempty"`
	TotalMarketsCapitalization *Price    `protobuf:"bytes,3,opt,name=total_markets_capitalization,json=totalMarketsCapitalization,proto3" json:"total_markets_capitalization,omitempty"`
	Markets                    []*Market `protobuf:"bytes,4,rep,name=markets,proto3" json:"markets,omitempty"`
	GenerationTime             uint64    `protobuf:"varint,5,opt,name=generation_time,json=generationTime,proto3" json:"generation_time,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}  `json:"-"`
	XXX_unrecognized           []byte    `json:"-"`
	XXX_sizecache              int32     `json:"-"`
}

func (m *MarketsSummary) Reset()         { *m = MarketsSummary{} }
func (m *MarketsSummary) String() string { return proto.CompactTextString(m) }
func (*MarketsSummary) ProtoMessage()    {}
func (*MarketsSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{0}
}
func (m *MarketsSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsSummary.Unmarshal(m, b)
}
func (m *MarketsSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsSummary.Marshal(b, m, deterministic)
}
func (dst *MarketsSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsSummary.Merge(dst, src)
}
func (m *MarketsSummary) XXX_Size() int {
	return xxx_messageInfo_MarketsSummary.Size(m)
}
func (m *MarketsSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsSummary.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsSummary proto.InternalMessageInfo

func (m *MarketsSummary) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *MarketsSummary) GetTotalMarkets() uint64 {
	if m != nil {
		return m.TotalMarkets
	}
	return 0
}

func (m *MarketsSummary) GetTotalMarketsCapitalization() *Price {
	if m != nil {
		return m.TotalMarketsCapitalization
	}
	return nil
}

func (m *MarketsSummary) GetMarkets() []*Market {
	if m != nil {
		return m.Markets
	}
	return nil
}

func (m *MarketsSummary) GetGenerationTime() uint64 {
	if m != nil {
		return m.GenerationTime
	}
	return 0
}

type Price struct {
	Eth                  float32  `protobuf:"fixed32,1,opt,name=eth,proto3" json:"eth,omitempty"`
	Usd                  float32  `protobuf:"fixed32,2,opt,name=usd,proto3" json:"usd,omitempty"`
	Btc                  float32  `protobuf:"fixed32,3,opt,name=btc,proto3" json:"btc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{1}
}
func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (dst *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(dst, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetEth() float32 {
	if m != nil {
		return m.Eth
	}
	return 0
}

func (m *Price) GetUsd() float32 {
	if m != nil {
		return m.Usd
	}
	return 0
}

func (m *Price) GetBtc() float32 {
	if m != nil {
		return m.Btc
	}
	return 0
}

type Market struct {
	Id                   string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketType           MarketType                   `protobuf:"varint,2,opt,name=market_type,json=marketType,proto3,enum=markets.MarketType" json:"market_type,omitempty"`
	Name                 string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CommentCount         uint32                       `protobuf:"varint,4,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	MarketCapitalization *Price                       `protobuf:"bytes,5,opt,name=market_capitalization,json=marketCapitalization,proto3" json:"market_capitalization,omitempty"`
	EndDate              uint64                       `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Predictions          []*Prediction                `protobuf:"bytes,7,rep,name=predictions,proto3" json:"predictions,omitempty"`
	Author               string                       `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	CreationTime         uint64                       `protobuf:"varint,9,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CreationBlock        uint64                       `protobuf:"varint,10,opt,name=creation_block,json=creationBlock,proto3" json:"creation_block,omitempty"`
	ResolutionSource     string                       `protobuf:"bytes,11,opt,name=resolution_source,json=resolutionSource,proto3" json:"resolution_source,omitempty"`
	Details              string                       `protobuf:"bytes,12,opt,name=details,proto3" json:"details,omitempty"`
	Tags                 []string                     `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	IsFeatured           bool                         `protobuf:"varint,14,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"`
	Category             string                       `protobuf:"bytes,15,opt,name=category,proto3" json:"category,omitempty"`
	LastTradeTime        uint64                       `protobuf:"varint,16,opt,name=last_trade_time,json=lastTradeTime,proto3" json:"last_trade_time,omitempty"`
	BestBids             map[uint64]*LiquidityAtPrice `protobuf:"bytes,17,rep,name=best_bids,json=bestBids,proto3" json:"best_bids,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BestAsks             map[uint64]*LiquidityAtPrice `protobuf:"bytes,18,rep,name=best_asks,json=bestAsks,proto3" json:"best_asks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{2}
}
func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (dst *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(dst, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Market) GetMarketType() MarketType {
	if m != nil {
		return m.MarketType
	}
	return MarketType_YESNO
}

func (m *Market) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Market) GetCommentCount() uint32 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *Market) GetMarketCapitalization() *Price {
	if m != nil {
		return m.MarketCapitalization
	}
	return nil
}

func (m *Market) GetEndDate() uint64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

func (m *Market) GetPredictions() []*Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

func (m *Market) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Market) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *Market) GetCreationBlock() uint64 {
	if m != nil {
		return m.CreationBlock
	}
	return 0
}

func (m *Market) GetResolutionSource() string {
	if m != nil {
		return m.ResolutionSource
	}
	return ""
}

func (m *Market) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Market) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Market) GetIsFeatured() bool {
	if m != nil {
		return m.IsFeatured
	}
	return false
}

func (m *Market) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Market) GetLastTradeTime() uint64 {
	if m != nil {
		return m.LastTradeTime
	}
	return 0
}

func (m *Market) GetBestBids() map[uint64]*LiquidityAtPrice {
	if m != nil {
		return m.BestBids
	}
	return nil
}

func (m *Market) GetBestAsks() map[uint64]*LiquidityAtPrice {
	if m != nil {
		return m.BestAsks
	}
	return nil
}

type MarketDetail struct {
	MarketId             string      `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	MarketSummary        *Market     `protobuf:"bytes,2,opt,name=market_summary,json=marketSummary,proto3" json:"market_summary,omitempty"`
	MarketInfo           *MarketInfo `protobuf:"bytes,3,opt,name=market_info,json=marketInfo,proto3" json:"market_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MarketDetail) Reset()         { *m = MarketDetail{} }
func (m *MarketDetail) String() string { return proto.CompactTextString(m) }
func (*MarketDetail) ProtoMessage()    {}
func (*MarketDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{3}
}
func (m *MarketDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDetail.Unmarshal(m, b)
}
func (m *MarketDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDetail.Marshal(b, m, deterministic)
}
func (dst *MarketDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDetail.Merge(dst, src)
}
func (m *MarketDetail) XXX_Size() int {
	return xxx_messageInfo_MarketDetail.Size(m)
}
func (m *MarketDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDetail proto.InternalMessageInfo

func (m *MarketDetail) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *MarketDetail) GetMarketSummary() *Market {
	if m != nil {
		return m.MarketSummary
	}
	return nil
}

func (m *MarketDetail) GetMarketInfo() *MarketInfo {
	if m != nil {
		return m.MarketInfo
	}
	return nil
}

type Prediction struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percent              float32  `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	Value                float32  `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	OutcomeId            uint64   `protobuf:"varint,4,opt,name=outcome_id,json=outcomeId,proto3" json:"outcome_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prediction) Reset()         { *m = Prediction{} }
func (m *Prediction) String() string { return proto.CompactTextString(m) }
func (*Prediction) ProtoMessage()    {}
func (*Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{4}
}
func (m *Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prediction.Unmarshal(m, b)
}
func (m *Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prediction.Marshal(b, m, deterministic)
}
func (dst *Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prediction.Merge(dst, src)
}
func (m *Prediction) XXX_Size() int {
	return xxx_messageInfo_Prediction.Size(m)
}
func (m *Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_Prediction proto.InternalMessageInfo

func (m *Prediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Prediction) GetPercent() float32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *Prediction) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Prediction) GetOutcomeId() uint64 {
	if m != nil {
		return m.OutcomeId
	}
	return 0
}

// LiquidityAtPrice represents a single price point in a market outcome's Order book.
// Note that one bid LiquidityAtPrice may represent an aggregation of N Orders.
type LiquidityAtPrice struct {
	Price                float32  `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	Amount               float32  `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiquidityAtPrice) Reset()         { *m = LiquidityAtPrice{} }
func (m *LiquidityAtPrice) String() string { return proto.CompactTextString(m) }
func (*LiquidityAtPrice) ProtoMessage()    {}
func (*LiquidityAtPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{5}
}
func (m *LiquidityAtPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiquidityAtPrice.Unmarshal(m, b)
}
func (m *LiquidityAtPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiquidityAtPrice.Marshal(b, m, deterministic)
}
func (dst *LiquidityAtPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiquidityAtPrice.Merge(dst, src)
}
func (m *LiquidityAtPrice) XXX_Size() int {
	return xxx_messageInfo_LiquidityAtPrice.Size(m)
}
func (m *LiquidityAtPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_LiquidityAtPrice.DiscardUnknown(m)
}

var xxx_messageInfo_LiquidityAtPrice proto.InternalMessageInfo

func (m *LiquidityAtPrice) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *LiquidityAtPrice) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type MarketsSnapshot struct {
	MarketsSummary       *MarketsSummary `protobuf:"bytes,1,opt,name=markets_summary,json=marketsSummary,proto3" json:"markets_summary,omitempty"`
	MarketInfos          []*MarketInfo   `protobuf:"bytes,2,rep,name=market_infos,json=marketInfos,proto3" json:"market_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MarketsSnapshot) Reset()         { *m = MarketsSnapshot{} }
func (m *MarketsSnapshot) String() string { return proto.CompactTextString(m) }
func (*MarketsSnapshot) ProtoMessage()    {}
func (*MarketsSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{6}
}
func (m *MarketsSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsSnapshot.Unmarshal(m, b)
}
func (m *MarketsSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsSnapshot.Marshal(b, m, deterministic)
}
func (dst *MarketsSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsSnapshot.Merge(dst, src)
}
func (m *MarketsSnapshot) XXX_Size() int {
	return xxx_messageInfo_MarketsSnapshot.Size(m)
}
func (m *MarketsSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsSnapshot proto.InternalMessageInfo

func (m *MarketsSnapshot) GetMarketsSummary() *MarketsSummary {
	if m != nil {
		return m.MarketsSummary
	}
	return nil
}

func (m *MarketsSnapshot) GetMarketInfos() []*MarketInfo {
	if m != nil {
		return m.MarketInfos
	}
	return nil
}

type MarketInfo struct {
	Id                        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Universe                  string            `protobuf:"bytes,2,opt,name=universe,proto3" json:"universe,omitempty"`
	MarketType                string            `protobuf:"bytes,3,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
	NumOutcomes               uint32            `protobuf:"varint,4,opt,name=num_outcomes,json=numOutcomes,proto3" json:"num_outcomes,omitempty"`
	MinPrice                  string            `protobuf:"bytes,5,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice                  string            `protobuf:"bytes,6,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	CumulativeScale           string            `protobuf:"bytes,7,opt,name=cumulative_scale,json=cumulativeScale,proto3" json:"cumulative_scale,omitempty"`
	Author                    string            `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	CreationTime              uint64            `protobuf:"varint,9,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CreationBlock             uint64            `protobuf:"varint,10,opt,name=creation_block,json=creationBlock,proto3" json:"creation_block,omitempty"`
	CreationFee               string            `protobuf:"bytes,11,opt,name=creation_fee,json=creationFee,proto3" json:"creation_fee,omitempty"`
	SettlementFee             string            `protobuf:"bytes,12,opt,name=settlement_fee,json=settlementFee,proto3" json:"settlement_fee,omitempty"`
	ReportingFeeRate          string            `protobuf:"bytes,13,opt,name=reporting_fee_rate,json=reportingFeeRate,proto3" json:"reporting_fee_rate,omitempty"`
	MarketCreatorFeeRate      string            `protobuf:"bytes,14,opt,name=market_creator_fee_rate,json=marketCreatorFeeRate,proto3" json:"market_creator_fee_rate,omitempty"`
	MarketCreatorFeesBalance  string            `protobuf:"bytes,15,opt,name=market_creator_fees_balance,json=marketCreatorFeesBalance,proto3" json:"market_creator_fees_balance,omitempty"`
	MarketCreatorMailbox      string            `protobuf:"bytes,16,opt,name=market_creator_mailbox,json=marketCreatorMailbox,proto3" json:"market_creator_mailbox,omitempty"`
	MarketCreatorMailboxOwner string            `protobuf:"bytes,17,opt,name=market_creator_mailbox_owner,json=marketCreatorMailboxOwner,proto3" json:"market_creator_mailbox_owner,omitempty"`
	InitialReportSize         string            `protobuf:"bytes,18,opt,name=initial_report_size,json=initialReportSize,proto3" json:"initial_report_size,omitempty"`
	Category                  string            `protobuf:"bytes,19,opt,name=category,proto3" json:"category,omitempty"`
	Tags                      []string          `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	Volume                    string            `protobuf:"bytes,21,opt,name=volume,proto3" json:"volume,omitempty"`
	OutstandingShares         string            `protobuf:"bytes,22,opt,name=outstanding_shares,json=outstandingShares,proto3" json:"outstanding_shares,omitempty"`
	FeeWindow                 string            `protobuf:"bytes,23,opt,name=fee_window,json=feeWindow,proto3" json:"fee_window,omitempty"`
	EndTime                   uint64            `protobuf:"varint,24,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	FinalizationBlockNumber   uint64            `protobuf:"varint,25,opt,name=finalization_block_number,json=finalizationBlockNumber,proto3" json:"finalization_block_number,omitempty"`
	FinalizationTime          uint64            `protobuf:"varint,26,opt,name=finalization_time,json=finalizationTime,proto3" json:"finalization_time,omitempty"`
	ReportingState            ReportingState    `protobuf:"varint,27,opt,name=reporting_state,json=reportingState,proto3,enum=markets.ReportingState" json:"reporting_state,omitempty"`
	Forking                   bool              `protobuf:"varint,28,opt,name=forking,proto3" json:"forking,omitempty"`
	NeedsMigration            bool              `protobuf:"varint,29,opt,name=needs_migration,json=needsMigration,proto3" json:"needs_migration,omitempty"`
	Description               string            `protobuf:"bytes,30,opt,name=description,proto3" json:"description,omitempty"`
	Details                   string            `protobuf:"bytes,31,opt,name=details,proto3" json:"details,omitempty"`
	ScalarDenomination        string            `protobuf:"bytes,32,opt,name=scalar_denomination,json=scalarDenomination,proto3" json:"scalar_denomination,omitempty"`
	DesignatedReporter        string            `protobuf:"bytes,33,opt,name=designated_reporter,json=designatedReporter,proto3" json:"designated_reporter,omitempty"`
	DesignatedReportStake     string            `protobuf:"bytes,34,opt,name=designated_report_stake,json=designatedReportStake,proto3" json:"designated_report_stake,omitempty"`
	ResolutionSource          string            `protobuf:"bytes,35,opt,name=resolution_source,json=resolutionSource,proto3" json:"resolution_source,omitempty"`
	NumTicks                  string            `protobuf:"bytes,36,opt,name=num_ticks,json=numTicks,proto3" json:"num_ticks,omitempty"`
	TickSize                  string            `protobuf:"bytes,37,opt,name=tick_size,json=tickSize,proto3" json:"tick_size,omitempty"`
	Consensus                 *NormalizedPayout `protobuf:"bytes,38,opt,name=consensus,proto3" json:"consensus,omitempty"`
	Outcomes                  []*OutcomeInfo    `protobuf:"bytes,39,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *MarketInfo) Reset()         { *m = MarketInfo{} }
func (m *MarketInfo) String() string { return proto.CompactTextString(m) }
func (*MarketInfo) ProtoMessage()    {}
func (*MarketInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{7}
}
func (m *MarketInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketInfo.Unmarshal(m, b)
}
func (m *MarketInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketInfo.Marshal(b, m, deterministic)
}
func (dst *MarketInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketInfo.Merge(dst, src)
}
func (m *MarketInfo) XXX_Size() int {
	return xxx_messageInfo_MarketInfo.Size(m)
}
func (m *MarketInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MarketInfo proto.InternalMessageInfo

func (m *MarketInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MarketInfo) GetUniverse() string {
	if m != nil {
		return m.Universe
	}
	return ""
}

func (m *MarketInfo) GetMarketType() string {
	if m != nil {
		return m.MarketType
	}
	return ""
}

func (m *MarketInfo) GetNumOutcomes() uint32 {
	if m != nil {
		return m.NumOutcomes
	}
	return 0
}

func (m *MarketInfo) GetMinPrice() string {
	if m != nil {
		return m.MinPrice
	}
	return ""
}

func (m *MarketInfo) GetMaxPrice() string {
	if m != nil {
		return m.MaxPrice
	}
	return ""
}

func (m *MarketInfo) GetCumulativeScale() string {
	if m != nil {
		return m.CumulativeScale
	}
	return ""
}

func (m *MarketInfo) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *MarketInfo) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *MarketInfo) GetCreationBlock() uint64 {
	if m != nil {
		return m.CreationBlock
	}
	return 0
}

func (m *MarketInfo) GetCreationFee() string {
	if m != nil {
		return m.CreationFee
	}
	return ""
}

func (m *MarketInfo) GetSettlementFee() string {
	if m != nil {
		return m.SettlementFee
	}
	return ""
}

func (m *MarketInfo) GetReportingFeeRate() string {
	if m != nil {
		return m.ReportingFeeRate
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorFeeRate() string {
	if m != nil {
		return m.MarketCreatorFeeRate
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorFeesBalance() string {
	if m != nil {
		return m.MarketCreatorFeesBalance
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorMailbox() string {
	if m != nil {
		return m.MarketCreatorMailbox
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorMailboxOwner() string {
	if m != nil {
		return m.MarketCreatorMailboxOwner
	}
	return ""
}

func (m *MarketInfo) GetInitialReportSize() string {
	if m != nil {
		return m.InitialReportSize
	}
	return ""
}

func (m *MarketInfo) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *MarketInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MarketInfo) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *MarketInfo) GetOutstandingShares() string {
	if m != nil {
		return m.OutstandingShares
	}
	return ""
}

func (m *MarketInfo) GetFeeWindow() string {
	if m != nil {
		return m.FeeWindow
	}
	return ""
}

func (m *MarketInfo) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *MarketInfo) GetFinalizationBlockNumber() uint64 {
	if m != nil {
		return m.FinalizationBlockNumber
	}
	return 0
}

func (m *MarketInfo) GetFinalizationTime() uint64 {
	if m != nil {
		return m.FinalizationTime
	}
	return 0
}

func (m *MarketInfo) GetReportingState() ReportingState {
	if m != nil {
		return m.ReportingState
	}
	return ReportingState_PRE_REPORTING
}

func (m *MarketInfo) GetForking() bool {
	if m != nil {
		return m.Forking
	}
	return false
}

func (m *MarketInfo) GetNeedsMigration() bool {
	if m != nil {
		return m.NeedsMigration
	}
	return false
}

func (m *MarketInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MarketInfo) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *MarketInfo) GetScalarDenomination() string {
	if m != nil {
		return m.ScalarDenomination
	}
	return ""
}

func (m *MarketInfo) GetDesignatedReporter() string {
	if m != nil {
		return m.DesignatedReporter
	}
	return ""
}

func (m *MarketInfo) GetDesignatedReportStake() string {
	if m != nil {
		return m.DesignatedReportStake
	}
	return ""
}

func (m *MarketInfo) GetResolutionSource() string {
	if m != nil {
		return m.ResolutionSource
	}
	return ""
}

func (m *MarketInfo) GetNumTicks() string {
	if m != nil {
		return m.NumTicks
	}
	return ""
}

func (m *MarketInfo) GetTickSize() string {
	if m != nil {
		return m.TickSize
	}
	return ""
}

func (m *MarketInfo) GetConsensus() *NormalizedPayout {
	if m != nil {
		return m.Consensus
	}
	return nil
}

func (m *MarketInfo) GetOutcomes() []*OutcomeInfo {
	if m != nil {
		return m.Outcomes
	}
	return nil
}

type NormalizedPayout struct {
	IsInvalid            bool     `protobuf:"varint,1,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid,omitempty"`
	Payout               []string `protobuf:"bytes,2,rep,name=payout,proto3" json:"payout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NormalizedPayout) Reset()         { *m = NormalizedPayout{} }
func (m *NormalizedPayout) String() string { return proto.CompactTextString(m) }
func (*NormalizedPayout) ProtoMessage()    {}
func (*NormalizedPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{8}
}
func (m *NormalizedPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NormalizedPayout.Unmarshal(m, b)
}
func (m *NormalizedPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NormalizedPayout.Marshal(b, m, deterministic)
}
func (dst *NormalizedPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NormalizedPayout.Merge(dst, src)
}
func (m *NormalizedPayout) XXX_Size() int {
	return xxx_messageInfo_NormalizedPayout.Size(m)
}
func (m *NormalizedPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_NormalizedPayout.DiscardUnknown(m)
}

var xxx_messageInfo_NormalizedPayout proto.InternalMessageInfo

func (m *NormalizedPayout) GetIsInvalid() bool {
	if m != nil {
		return m.IsInvalid
	}
	return false
}

func (m *NormalizedPayout) GetPayout() []string {
	if m != nil {
		return m.Payout
	}
	return nil
}

type OutcomeInfo struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Volume               string   `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutcomeInfo) Reset()         { *m = OutcomeInfo{} }
func (m *OutcomeInfo) String() string { return proto.CompactTextString(m) }
func (*OutcomeInfo) ProtoMessage()    {}
func (*OutcomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_505db0e947128d47, []int{9}
}
func (m *OutcomeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutcomeInfo.Unmarshal(m, b)
}
func (m *OutcomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutcomeInfo.Marshal(b, m, deterministic)
}
func (dst *OutcomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutcomeInfo.Merge(dst, src)
}
func (m *OutcomeInfo) XXX_Size() int {
	return xxx_messageInfo_OutcomeInfo.Size(m)
}
func (m *OutcomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OutcomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OutcomeInfo proto.InternalMessageInfo

func (m *OutcomeInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OutcomeInfo) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *OutcomeInfo) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OutcomeInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*MarketsSummary)(nil), "markets.MarketsSummary")
	proto.RegisterType((*Price)(nil), "markets.Price")
	proto.RegisterType((*Market)(nil), "markets.Market")
	proto.RegisterMapType((map[uint64]*LiquidityAtPrice)(nil), "markets.Market.BestAsksEntry")
	proto.RegisterMapType((map[uint64]*LiquidityAtPrice)(nil), "markets.Market.BestBidsEntry")
	proto.RegisterType((*MarketDetail)(nil), "markets.MarketDetail")
	proto.RegisterType((*Prediction)(nil), "markets.Prediction")
	proto.RegisterType((*LiquidityAtPrice)(nil), "markets.LiquidityAtPrice")
	proto.RegisterType((*MarketsSnapshot)(nil), "markets.MarketsSnapshot")
	proto.RegisterType((*MarketInfo)(nil), "markets.MarketInfo")
	proto.RegisterType((*NormalizedPayout)(nil), "markets.NormalizedPayout")
	proto.RegisterType((*OutcomeInfo)(nil), "markets.OutcomeInfo")
	proto.RegisterEnum("markets.MarketType", MarketType_name, MarketType_value)
	proto.RegisterEnum("markets.ReportingState", ReportingState_name, ReportingState_value)
}

func init() { proto.RegisterFile("markets.proto", fileDescriptor_markets_505db0e947128d47) }

var fileDescriptor_markets_505db0e947128d47 = []byte{
	// 1631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5f, 0x73, 0x1b, 0xb7,
	0x11, 0x0f, 0x29, 0x89, 0x22, 0x97, 0xe2, 0x1f, 0x41, 0xb2, 0x05, 0x49, 0x76, 0x43, 0x33, 0x4d,
	0xa2, 0xa4, 0xad, 0xd3, 0x71, 0x5d, 0xb7, 0x93, 0x99, 0x4c, 0x4d, 0x8b, 0x94, 0x86, 0x13, 0x9b,
	0xd4, 0x80, 0x4c, 0xd5, 0xf6, 0xe5, 0xe6, 0x78, 0x07, 0xc9, 0x18, 0xf1, 0x70, 0xec, 0x01, 0x27,
	0x5b, 0xfe, 0x0a, 0xfd, 0x04, 0x7d, 0xec, 0xd7, 0xeb, 0x5b, 0xdf, 0xfb, 0xd0, 0xc1, 0x02, 0x77,
	0x3c, 0x52, 0xf6, 0x5b, 0x27, 0x6f, 0xd8, 0xfd, 0xed, 0x6f, 0x01, 0xec, 0xed, 0x1f, 0x1c, 0x34,
	0x22, 0x3f, 0xb9, 0xe1, 0x5a, 0x3d, 0x5d, 0x24, 0xb1, 0x8e, 0xc9, 0xb6, 0x13, 0xbb, 0xff, 0x29,
	0x41, 0xf3, 0x8d, 0x5d, 0x4f, 0xd2, 0x28, 0xf2, 0x93, 0x3b, 0xb2, 0x0f, 0x5b, 0xb3, 0x79, 0x1c,
	0xdc, 0xd0, 0x52, 0xa7, 0x74, 0xb2, 0xc9, 0xac, 0x40, 0xbe, 0x80, 0x86, 0x8e, 0xb5, 0x3f, 0xf7,
	0x1c, 0x93, 0x96, 0x11, 0xdd, 0x41, 0xa5, 0xf3, 0x40, 0x2e, 0xe0, 0xd1, 0x8a, 0x91, 0x17, 0xf8,
	0x0b, 0xa1, 0xfd, 0xb9, 0xf8, 0xe0, 0x6b, 0x11, 0x4b, 0xba, 0xd1, 0x29, 0x9d, 0xd4, 0x9f, 0x35,
	0x9f, 0x66, 0x87, 0xb9, 0x48, 0x44, 0xc0, 0xd9, 0x51, 0xd1, 0xc7, 0xe9, 0x0a, 0x83, 0x7c, 0x03,
	0xd9, 0x51, 0xe9, 0x66, 0x67, 0xe3, 0xa4, 0xfe, 0xac, 0x95, 0x93, 0x2d, 0x81, 0x65, 0x38, 0xf9,
	0x1a, 0x5a, 0xd7, 0x5c, 0xf2, 0x04, 0x89, 0x9e, 0x16, 0x11, 0xa7, 0x5b, 0x78, 0xc6, 0xe6, 0x52,
	0x3d, 0x15, 0x11, 0xef, 0xfe, 0x00, 0x5b, 0xb8, 0x31, 0x69, 0xc3, 0x06, 0xd7, 0x6f, 0xf1, 0x9e,
	0x65, 0x66, 0x96, 0x46, 0x93, 0xaa, 0x10, 0xef, 0x56, 0x66, 0x66, 0x69, 0x34, 0x33, 0x1d, 0xe0,
	0xc9, 0xcb, 0xcc, 0x2c, 0xbb, 0xff, 0xae, 0x40, 0xc5, 0xee, 0x4d, 0x9a, 0x50, 0x16, 0x21, 0xf2,
	0x6b, 0xac, 0x2c, 0x42, 0xf2, 0x1c, 0xea, 0xf6, 0x34, 0x9e, 0xbe, 0x5b, 0x70, 0x74, 0xd3, 0x7c,
	0xb6, 0xb7, 0x76, 0xe2, 0xe9, 0xdd, 0x82, 0x33, 0x88, 0xf2, 0x35, 0x21, 0xb0, 0x29, 0xfd, 0x88,
	0xe3, 0x1e, 0x35, 0x86, 0x6b, 0x13, 0xee, 0x20, 0x8e, 0x22, 0x2e, 0xb5, 0x17, 0xc4, 0xa9, 0xd4,
	0x74, 0xb3, 0x53, 0x3a, 0x69, 0xb0, 0x1d, 0xa7, 0x3c, 0x35, 0x3a, 0x72, 0x0a, 0x0f, 0xdc, 0x76,
	0x6b, 0x71, 0xde, 0xfa, 0x68, 0x9c, 0xf7, 0xad, 0xb8, 0x16, 0xe1, 0x43, 0xa8, 0x72, 0x19, 0x7a,
	0xa1, 0xaf, 0x39, 0xad, 0x60, 0xbc, 0xb6, 0xb9, 0x0c, 0xfb, 0xbe, 0xe6, 0xe4, 0xf7, 0x50, 0x5f,
	0x24, 0x3c, 0x14, 0x81, 0x31, 0x54, 0x74, 0x1b, 0x3f, 0xc0, 0x5e, 0xc1, 0x6b, 0x86, 0xb1, 0xa2,
	0x1d, 0x79, 0x08, 0x15, 0x3f, 0xd5, 0x6f, 0xe3, 0x84, 0x56, 0xf1, 0x46, 0x4e, 0xc2, 0x3b, 0x25,
	0xbc, 0xf0, 0x79, 0x6a, 0x36, 0x85, 0x32, 0xa5, 0xf9, 0x38, 0xe4, 0x4b, 0x68, 0xe6, 0x46, 0x36,
	0x0d, 0x01, 0xad, 0x72, 0xea, 0x2b, 0x4c, 0xc7, 0x5f, 0xc1, 0x6e, 0xc2, 0x55, 0x3c, 0x4f, 0xd1,
	0x50, 0xc5, 0x69, 0x12, 0x70, 0x5a, 0xc7, 0xed, 0xda, 0x4b, 0x60, 0x82, 0x7a, 0x42, 0x61, 0x3b,
	0xe4, 0xda, 0x17, 0x73, 0x45, 0x77, 0xd0, 0x24, 0x13, 0x4d, 0xe8, 0xb5, 0x7f, 0xad, 0x68, 0xa3,
	0xb3, 0x61, 0x42, 0x6f, 0xd6, 0xe4, 0x73, 0xa8, 0x0b, 0xe5, 0x5d, 0x71, 0x5f, 0xa7, 0x09, 0x0f,
	0x69, 0xb3, 0x53, 0x3a, 0xa9, 0x32, 0x10, 0xea, 0xcc, 0x69, 0xc8, 0x11, 0x54, 0x03, 0x5f, 0xf3,
	0xeb, 0x38, 0xb9, 0xa3, 0x2d, 0xf4, 0x97, 0xcb, 0xe4, 0x2b, 0x68, 0xcd, 0x7d, 0xa5, 0x3d, 0x9d,
	0xf8, 0x21, 0xb7, 0xb7, 0x6c, 0xdb, 0xf3, 0x1b, 0xf5, 0xd4, 0x68, 0xf1, 0x9a, 0xdf, 0x43, 0x6d,
	0xc6, 0x95, 0xf6, 0x66, 0x22, 0x54, 0x74, 0x17, 0x03, 0xfb, 0x78, 0x2d, 0x4f, 0x9e, 0xbe, 0xe2,
	0x4a, 0xbf, 0x12, 0xa1, 0x1a, 0x48, 0x9d, 0xdc, 0xb1, 0xea, 0xcc, 0x89, 0x39, 0xd7, 0x57, 0x37,
	0x8a, 0x92, 0x4f, 0x73, 0x7b, 0xea, 0xa6, 0xc8, 0x35, 0xe2, 0xd1, 0x9f, 0xa1, 0xb1, 0xe2, 0xd6,
	0xe4, 0xf7, 0x0d, 0xbf, 0x73, 0xb5, 0x6e, 0x96, 0xe4, 0x3b, 0xd8, 0xba, 0xf5, 0xe7, 0xa9, 0x4d,
	0xdf, 0xfa, 0xb3, 0xc3, 0xdc, 0xf5, 0x6b, 0xf1, 0xf7, 0x54, 0x84, 0x42, 0xdf, 0xf5, 0xb4, 0x4d,
	0x28, 0x6b, 0xf7, 0x7d, 0xf9, 0x8f, 0xa5, 0xcc, 0x6f, 0xbe, 0xe5, 0xff, 0xc9, 0x6f, 0xf7, 0x9f,
	0x25, 0xd8, 0xb1, 0x57, 0xea, 0xe3, 0x27, 0x23, 0xc7, 0x50, 0x73, 0x39, 0x9f, 0x57, 0x5e, 0xd5,
	0x2a, 0x86, 0x21, 0x79, 0x01, 0x4d, 0x07, 0x2a, 0xdb, 0xcc, 0xdc, 0x5e, 0xf7, 0x9a, 0x86, 0x6b,
	0x87, 0x59, 0xcb, 0x5b, 0xd6, 0xad, 0x90, 0x57, 0xb1, 0x6b, 0x53, 0xeb, 0x75, 0x3b, 0x94, 0x57,
	0x71, 0x56, 0xb7, 0x66, 0xdd, 0x8d, 0x01, 0x96, 0x25, 0x90, 0x57, 0x71, 0xa9, 0x50, 0xc5, 0x14,
	0xb6, 0x17, 0x3c, 0x09, 0xb8, 0xd4, 0xae, 0xa5, 0x64, 0xa2, 0x69, 0xb2, 0x36, 0x18, 0xb6, 0xb1,
	0x58, 0x81, 0x3c, 0x06, 0x88, 0x53, 0x1d, 0xc4, 0x11, 0x37, 0xb7, 0xdb, 0xc4, 0xd8, 0xd5, 0x9c,
	0x66, 0x18, 0x76, 0x5f, 0x42, 0x7b, 0x3d, 0x56, 0xc6, 0xd1, 0xc2, 0x2c, 0x5c, 0x17, 0xb3, 0x02,
	0x96, 0x60, 0x84, 0x7d, 0xc3, 0xee, 0xeb, 0xa4, 0xee, 0x3f, 0x4a, 0xd0, 0xca, 0xda, 0xbd, 0xf4,
	0x17, 0xea, 0x6d, 0xac, 0xc9, 0x4b, 0x68, 0x65, 0xed, 0x3a, 0x8b, 0x5a, 0x09, 0x03, 0x70, 0xb0,
	0x16, 0x80, 0x6c, 0x42, 0x30, 0x17, 0xe4, 0x7c, 0x62, 0xbc, 0x80, 0x9d, 0x42, 0xf8, 0xcc, 0x68,
	0xd8, 0xf8, 0x54, 0xfc, 0xea, 0xcb, 0xf8, 0xa9, 0xee, 0xbf, 0x76, 0x00, 0x96, 0xd8, 0xbd, 0x6e,
	0x7a, 0x04, 0xd5, 0x54, 0x8a, 0x5b, 0x9e, 0x28, 0x9b, 0x33, 0x35, 0x96, 0xcb, 0xa6, 0x48, 0x8b,
	0x9d, 0xd6, 0xb6, 0xce, 0x62, 0x53, 0x7d, 0x02, 0x3b, 0x32, 0x8d, 0x3c, 0x17, 0x3c, 0xe5, 0xfa,
	0x67, 0x5d, 0xa6, 0xd1, 0xd8, 0xa9, 0x30, 0x95, 0x84, 0xf4, 0x6c, 0xf8, 0xb6, 0x5c, 0x2a, 0x09,
	0x69, 0xe3, 0x8a, 0x79, 0xf6, 0xde, 0x81, 0x95, 0x2c, 0xcf, 0xde, 0x5b, 0xf0, 0x1b, 0x68, 0x07,
	0x69, 0x94, 0xce, 0x7d, 0x2d, 0x6e, 0xb9, 0xa7, 0x02, 0x7f, 0xce, 0xe9, 0x36, 0xda, 0xb4, 0x96,
	0xfa, 0x89, 0x51, 0xff, 0x2c, 0xcd, 0xf0, 0x09, 0xe4, 0x34, 0xef, 0x8a, 0x67, 0x7d, 0xb0, 0x9e,
	0xe9, 0xce, 0x38, 0x7a, 0x52, 0x5c, 0xeb, 0x39, 0xc7, 0x91, 0x62, 0x8c, 0x6c, 0x27, 0x6c, 0x2c,
	0xb5, 0xc6, 0xec, 0xd7, 0x40, 0x12, 0xbe, 0x88, 0x13, 0x2d, 0xe4, 0xb5, 0xb1, 0xf2, 0x12, 0x33,
	0x16, 0x1a, 0x59, 0x5f, 0x75, 0xc8, 0x19, 0xe7, 0xcc, 0xce, 0x87, 0x83, 0x6c, 0xfe, 0x98, 0xad,
	0xe2, 0x64, 0x49, 0x69, 0x22, 0x25, 0x9b, 0x38, 0x16, 0xcd, 0x68, 0x3f, 0xc0, 0xf1, 0x7d, 0x9a,
	0xf2, 0x66, 0xfe, 0xdc, 0x97, 0x01, 0x77, 0x2d, 0x95, 0xae, 0x53, 0xd5, 0x2b, 0x8b, 0x93, 0xe7,
	0xf0, 0x70, 0x8d, 0x1e, 0xf9, 0x62, 0x3e, 0x8b, 0xdf, 0x63, 0xa7, 0x5d, 0xdf, 0xf4, 0x8d, 0xc5,
	0xc8, 0x9f, 0xe0, 0xd1, 0xc7, 0x59, 0x5e, 0xfc, 0x4e, 0xf2, 0x84, 0xee, 0x22, 0xf7, 0xf0, 0x63,
	0xdc, 0xb1, 0x31, 0x20, 0x4f, 0x61, 0x4f, 0x48, 0xa1, 0x85, 0x3f, 0xf7, 0x6c, 0x20, 0x3c, 0x25,
	0x3e, 0x70, 0x4a, 0x90, 0xb7, 0xeb, 0x20, 0x86, 0xc8, 0x44, 0x7c, 0xe0, 0x2b, 0x53, 0x62, 0x6f,
	0x6d, 0x4a, 0x64, 0x63, 0x67, 0xbf, 0x30, 0x76, 0x1e, 0x42, 0xe5, 0x36, 0x9e, 0xa7, 0x11, 0xa7,
	0x0f, 0x6c, 0xa2, 0x58, 0x89, 0xfc, 0x06, 0x48, 0x9c, 0x6a, 0xa5, 0x7d, 0x19, 0x9a, 0x8f, 0xa2,
	0xde, 0xfa, 0x09, 0x57, 0xf4, 0xa1, 0xdd, 0xb6, 0x80, 0x4c, 0x10, 0x30, 0x2d, 0xc4, 0x7c, 0x84,
	0x77, 0x42, 0x86, 0xf1, 0x3b, 0x7a, 0x80, 0x66, 0xb5, 0x2b, 0xce, 0x2f, 0x51, 0x91, 0x4d, 0x7b,
	0xcc, 0x38, 0x9a, 0x4f, 0x7b, 0x37, 0x92, 0x0e, 0xaf, 0x84, 0xcc, 0x1f, 0x06, 0x36, 0xe1, 0x3c,
	0x99, 0x46, 0x33, 0x9e, 0xd0, 0x43, 0xb4, 0x3d, 0x28, 0x1a, 0x60, 0xee, 0x8d, 0x10, 0x36, 0xe3,
	0x78, 0x85, 0x8b, 0xfe, 0x8f, 0x90, 0xd3, 0x2e, 0x02, 0xb8, 0xd1, 0x4b, 0x68, 0x2d, 0x93, 0x4c,
	0x69, 0x93, 0x2e, 0xc7, 0xf8, 0x52, 0x5a, 0x36, 0x1c, 0x96, 0xe1, 0x13, 0x03, 0xb3, 0x66, 0xb2,
	0x22, 0x9b, 0xbe, 0x7a, 0x15, 0x27, 0x37, 0x42, 0x5e, 0xd3, 0x47, 0x38, 0x9e, 0x33, 0xd1, 0x3c,
	0x02, 0x25, 0xe7, 0xa1, 0xf2, 0x22, 0x71, 0x6d, 0x9f, 0x7c, 0xf4, 0x31, 0x5a, 0x34, 0x51, 0xfd,
	0x26, 0xd3, 0x92, 0x0e, 0xd4, 0x43, 0xae, 0x82, 0x44, 0x2c, 0xd0, 0xe8, 0x17, 0xb6, 0x64, 0x0a,
	0xaa, 0xe2, 0xab, 0xe1, 0xf3, 0xd5, 0x57, 0xc3, 0x77, 0xb0, 0x67, 0x6a, 0xde, 0x4f, 0xbc, 0x90,
	0xcb, 0x38, 0x12, 0xd2, 0x6e, 0xd4, 0x41, 0x2b, 0x62, 0xa1, 0x7e, 0x01, 0x31, 0x84, 0x90, 0x2b,
	0x71, 0x2d, 0x7d, 0xcd, 0x43, 0x97, 0x3e, 0x3c, 0xa1, 0x4f, 0x2c, 0x61, 0x09, 0x31, 0x87, 0x90,
	0x17, 0x70, 0x70, 0x8f, 0x60, 0x42, 0x75, 0xc3, 0x69, 0x17, 0x49, 0x0f, 0xd6, 0x49, 0x13, 0x03,
	0x7e, 0xfc, 0x59, 0xf4, 0xc5, 0x27, 0x9e, 0x45, 0xc7, 0x50, 0x33, 0x2d, 0x52, 0x8b, 0xe0, 0x46,
	0xd1, 0x5f, 0xda, 0x14, 0x95, 0x69, 0x34, 0x35, 0xb2, 0x01, 0x0d, 0x60, 0x93, 0xfc, 0x4b, 0x0b,
	0x1a, 0x05, 0xe6, 0xf6, 0x1f, 0xa0, 0x16, 0xc4, 0x52, 0x71, 0xa9, 0x52, 0x45, 0xbf, 0x5a, 0x1b,
	0xe7, 0xa3, 0x38, 0x89, 0xcc, 0x07, 0xe7, 0xe1, 0x85, 0x7f, 0x17, 0xa7, 0x9a, 0x2d, 0x6d, 0xc9,
	0x6f, 0xa1, 0x9a, 0x77, 0xe4, 0xaf, 0x71, 0x4a, 0xec, 0xe7, 0x3c, 0xd7, 0x97, 0x71, 0x4c, 0xe4,
	0x56, 0xdd, 0x21, 0xb4, 0xd7, 0x1d, 0x9a, 0x1c, 0x17, 0xca, 0x13, 0xf2, 0xd6, 0x9f, 0xbb, 0x81,
	0x51, 0x65, 0x35, 0xa1, 0x86, 0x56, 0x61, 0x2a, 0x69, 0x81, 0x86, 0x38, 0x88, 0x6a, 0xcc, 0x49,
	0xdd, 0x08, 0xea, 0x85, 0x3d, 0x0a, 0xe3, 0x66, 0x13, 0xc7, 0xcd, 0xb2, 0x00, 0xcb, 0x2b, 0x05,
	0x98, 0x4f, 0x58, 0x3b, 0x64, 0xdc, 0x84, 0x5d, 0xcb, 0x9f, 0xcd, 0x7b, 0xf9, 0xf3, 0xed, 0xf3,
	0x6c, 0xb8, 0xe1, 0x3c, 0xaa, 0xc1, 0xd6, 0x5f, 0x07, 0x93, 0xd1, 0xb8, 0xfd, 0x19, 0x69, 0x41,
	0xfd, 0xb4, 0x37, 0x1d, 0x9c, 0x8f, 0xd9, 0xf0, 0xb4, 0xf7, 0xba, 0x5d, 0x22, 0x00, 0x95, 0xc9,
	0x69, 0xef, 0x75, 0x8f, 0xb5, 0xcb, 0xdf, 0xfe, 0xb7, 0x04, 0xcd, 0xd5, 0xec, 0x27, 0xbb, 0xd0,
	0xb8, 0x60, 0x03, 0x8f, 0x0d, 0x2e, 0xc6, 0x6c, 0x3a, 0x1c, 0x9d, 0xb7, 0x3f, 0x23, 0x14, 0xf6,
	0xfb, 0x83, 0xc9, 0xf0, 0x7c, 0xd4, 0x9b, 0x0e, 0xfa, 0x05, 0xa4, 0x44, 0x08, 0x34, 0xc7, 0x17,
	0x83, 0x51, 0x41, 0x57, 0x26, 0x87, 0xf0, 0xe0, 0x94, 0x8d, 0x2f, 0xfb, 0x93, 0xf1, 0x4f, 0xec,
	0x74, 0x38, 0x3a, 0xf7, 0xfa, 0xc3, 0xc9, 0xc5, 0x4f, 0xd3, 0x41, 0x7b, 0xc3, 0x38, 0xea, 0x5d,
	0xf6, 0x86, 0xc6, 0xd0, 0x1b, 0x0d, 0xfe, 0x32, 0xf5, 0x2e, 0x87, 0xa3, 0xfe, 0xf8, 0xb2, 0xbd,
	0x69, 0x48, 0x39, 0x72, 0x36, 0x1c, 0xf5, 0x5e, 0x0f, 0xff, 0xd6, 0x9b, 0x0e, 0xc7, 0xa3, 0xf6,
	0x16, 0x69, 0x40, 0xcd, 0x69, 0x06, 0xfd, 0x76, 0x85, 0xd4, 0x61, 0xfb, 0x6c, 0xcc, 0x7e, 0x34,
	0x7b, 0x6d, 0x93, 0x0e, 0x3c, 0x5a, 0x3a, 0x1c, 0xbb, 0x63, 0x78, 0x6f, 0x86, 0xe7, 0xcc, 0xb2,
	0xab, 0xe4, 0x18, 0x0e, 0x96, 0x8e, 0xc7, 0xec, 0xc7, 0x02, 0x58, 0x9b, 0x55, 0xf0, 0xff, 0xf4,
	0x77, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xca, 0xac, 0x4b, 0x7f, 0xb0, 0x0e, 0x00, 0x00,
}
