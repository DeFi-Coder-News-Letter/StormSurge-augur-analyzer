// Code generated by protoc-gen-go. DO NOT EDIT.
// source: markets.proto

package augur

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReportingState int32

const (
	ReportingState_PRE_REPORTING                ReportingState = 0
	ReportingState_DESIGNATED_REPORTING         ReportingState = 1
	ReportingState_OPEN_REPORTING               ReportingState = 2
	ReportingState_CROWDSOURCING_DISPUTE        ReportingState = 3
	ReportingState_AWAITING_NEXT_WINDOW         ReportingState = 4
	ReportingState_AWAITING_FINALIZATION        ReportingState = 5
	ReportingState_FINALIZED                    ReportingState = 6
	ReportingState_FORKING                      ReportingState = 7
	ReportingState_AWAITING_NO_REPORT_MIGRATION ReportingState = 8
	ReportingState_AWAITING_FORK_MIGRATION      ReportingState = 9
)

var ReportingState_name = map[int32]string{
	0: "PRE_REPORTING",
	1: "DESIGNATED_REPORTING",
	2: "OPEN_REPORTING",
	3: "CROWDSOURCING_DISPUTE",
	4: "AWAITING_NEXT_WINDOW",
	5: "AWAITING_FINALIZATION",
	6: "FINALIZED",
	7: "FORKING",
	8: "AWAITING_NO_REPORT_MIGRATION",
	9: "AWAITING_FORK_MIGRATION",
}
var ReportingState_value = map[string]int32{
	"PRE_REPORTING":                0,
	"DESIGNATED_REPORTING":         1,
	"OPEN_REPORTING":               2,
	"CROWDSOURCING_DISPUTE":        3,
	"AWAITING_NEXT_WINDOW":         4,
	"AWAITING_FINALIZATION":        5,
	"FINALIZED":                    6,
	"FORKING":                      7,
	"AWAITING_NO_REPORT_MIGRATION": 8,
	"AWAITING_FORK_MIGRATION":      9,
}

func (x ReportingState) String() string {
	return proto.EnumName(ReportingState_name, int32(x))
}
func (ReportingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{0}
}

type GetMarketsRequest struct {
	Universe             string   `protobuf:"bytes,1,opt,name=universe,proto3" json:"universe,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	ReportingState       string   `protobuf:"bytes,4,opt,name=reporting_state,json=reportingState,proto3" json:"reporting_state,omitempty"`
	FeeWindow            string   `protobuf:"bytes,5,opt,name=fee_window,json=feeWindow,proto3" json:"fee_window,omitempty"`
	DesignatedReporter   string   `protobuf:"bytes,6,opt,name=designated_reporter,json=designatedReporter,proto3" json:"designated_reporter,omitempty"`
	SortBy               string   `protobuf:"bytes,7,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	IsSortDescending     bool     `protobuf:"varint,8,opt,name=is_sort_descending,json=isSortDescending,proto3" json:"is_sort_descending,omitempty"`
	Limit                uint32   `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32   `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketsRequest) Reset()         { *m = GetMarketsRequest{} }
func (m *GetMarketsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMarketsRequest) ProtoMessage()    {}
func (*GetMarketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{0}
}
func (m *GetMarketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsRequest.Unmarshal(m, b)
}
func (m *GetMarketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsRequest.Marshal(b, m, deterministic)
}
func (dst *GetMarketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsRequest.Merge(dst, src)
}
func (m *GetMarketsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMarketsRequest.Size(m)
}
func (m *GetMarketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsRequest proto.InternalMessageInfo

func (m *GetMarketsRequest) GetUniverse() string {
	if m != nil {
		return m.Universe
	}
	return ""
}

func (m *GetMarketsRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *GetMarketsRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *GetMarketsRequest) GetReportingState() string {
	if m != nil {
		return m.ReportingState
	}
	return ""
}

func (m *GetMarketsRequest) GetFeeWindow() string {
	if m != nil {
		return m.FeeWindow
	}
	return ""
}

func (m *GetMarketsRequest) GetDesignatedReporter() string {
	if m != nil {
		return m.DesignatedReporter
	}
	return ""
}

func (m *GetMarketsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *GetMarketsRequest) GetIsSortDescending() bool {
	if m != nil {
		return m.IsSortDescending
	}
	return false
}

func (m *GetMarketsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetMarketsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetMarketsResponse struct {
	MarketAddresses      []string `protobuf:"bytes,1,rep,name=market_addresses,json=marketAddresses,proto3" json:"market_addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketsResponse) Reset()         { *m = GetMarketsResponse{} }
func (m *GetMarketsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMarketsResponse) ProtoMessage()    {}
func (*GetMarketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{1}
}
func (m *GetMarketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsResponse.Unmarshal(m, b)
}
func (m *GetMarketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsResponse.Marshal(b, m, deterministic)
}
func (dst *GetMarketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsResponse.Merge(dst, src)
}
func (m *GetMarketsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMarketsResponse.Size(m)
}
func (m *GetMarketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsResponse proto.InternalMessageInfo

func (m *GetMarketsResponse) GetMarketAddresses() []string {
	if m != nil {
		return m.MarketAddresses
	}
	return nil
}

type GetMarketsInfoRequest struct {
	MarketAddresses      []string `protobuf:"bytes,2,rep,name=market_addresses,json=marketAddresses,proto3" json:"market_addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketsInfoRequest) Reset()         { *m = GetMarketsInfoRequest{} }
func (m *GetMarketsInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMarketsInfoRequest) ProtoMessage()    {}
func (*GetMarketsInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{2}
}
func (m *GetMarketsInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsInfoRequest.Unmarshal(m, b)
}
func (m *GetMarketsInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetMarketsInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsInfoRequest.Merge(dst, src)
}
func (m *GetMarketsInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMarketsInfoRequest.Size(m)
}
func (m *GetMarketsInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsInfoRequest proto.InternalMessageInfo

func (m *GetMarketsInfoRequest) GetMarketAddresses() []string {
	if m != nil {
		return m.MarketAddresses
	}
	return nil
}

type GetMarketsInfoResponse struct {
	MarketInfo           []*MarketInfo `protobuf:"bytes,1,rep,name=market_info,json=marketInfo,proto3" json:"market_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetMarketsInfoResponse) Reset()         { *m = GetMarketsInfoResponse{} }
func (m *GetMarketsInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMarketsInfoResponse) ProtoMessage()    {}
func (*GetMarketsInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{3}
}
func (m *GetMarketsInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsInfoResponse.Unmarshal(m, b)
}
func (m *GetMarketsInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetMarketsInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsInfoResponse.Merge(dst, src)
}
func (m *GetMarketsInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMarketsInfoResponse.Size(m)
}
func (m *GetMarketsInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsInfoResponse proto.InternalMessageInfo

func (m *GetMarketsInfoResponse) GetMarketInfo() []*MarketInfo {
	if m != nil {
		return m.MarketInfo
	}
	return nil
}

type MarketInfo struct {
	Id                        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Universe                  string            `protobuf:"bytes,2,opt,name=universe,proto3" json:"universe,omitempty"`
	MarketType                string            `protobuf:"bytes,3,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
	NumOutcomes               uint32            `protobuf:"varint,4,opt,name=num_outcomes,json=numOutcomes,proto3" json:"num_outcomes,omitempty"`
	MinPrice                  string            `protobuf:"bytes,5,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice                  string            `protobuf:"bytes,6,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	CumulativeScale           string            `protobuf:"bytes,7,opt,name=cumulative_scale,json=cumulativeScale,proto3" json:"cumulative_scale,omitempty"`
	Author                    string            `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	CreationTime              uint64            `protobuf:"varint,9,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CreationBlock             uint64            `protobuf:"varint,10,opt,name=creation_block,json=creationBlock,proto3" json:"creation_block,omitempty"`
	CreationFee               string            `protobuf:"bytes,11,opt,name=creation_fee,json=creationFee,proto3" json:"creation_fee,omitempty"`
	SettlementFee             string            `protobuf:"bytes,12,opt,name=settlement_fee,json=settlementFee,proto3" json:"settlement_fee,omitempty"`
	ReportingFeeRate          string            `protobuf:"bytes,13,opt,name=reporting_fee_rate,json=reportingFeeRate,proto3" json:"reporting_fee_rate,omitempty"`
	MarketCreatorFeeRate      string            `protobuf:"bytes,14,opt,name=market_creator_fee_rate,json=marketCreatorFeeRate,proto3" json:"market_creator_fee_rate,omitempty"`
	MarketCreatorFeesBalance  string            `protobuf:"bytes,15,opt,name=market_creator_fees_balance,json=marketCreatorFeesBalance,proto3" json:"market_creator_fees_balance,omitempty"`
	MarketCreatorMailbox      string            `protobuf:"bytes,16,opt,name=market_creator_mailbox,json=marketCreatorMailbox,proto3" json:"market_creator_mailbox,omitempty"`
	MarketCreatorMailboxOwner string            `protobuf:"bytes,17,opt,name=market_creator_mailbox_owner,json=marketCreatorMailboxOwner,proto3" json:"market_creator_mailbox_owner,omitempty"`
	InitialReportSize         string            `protobuf:"bytes,18,opt,name=initial_report_size,json=initialReportSize,proto3" json:"initial_report_size,omitempty"`
	Category                  string            `protobuf:"bytes,19,opt,name=category,proto3" json:"category,omitempty"`
	Tags                      []string          `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	Volume                    string            `protobuf:"bytes,21,opt,name=volume,proto3" json:"volume,omitempty"`
	OutstandingShares         string            `protobuf:"bytes,22,opt,name=outstanding_shares,json=outstandingShares,proto3" json:"outstanding_shares,omitempty"`
	FeeWindow                 string            `protobuf:"bytes,23,opt,name=fee_window,json=feeWindow,proto3" json:"fee_window,omitempty"`
	EndTime                   uint64            `protobuf:"varint,24,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	FinalizationBlockNumber   uint64            `protobuf:"varint,25,opt,name=finalization_block_number,json=finalizationBlockNumber,proto3" json:"finalization_block_number,omitempty"`
	FinalizationTime          uint64            `protobuf:"varint,26,opt,name=finalization_time,json=finalizationTime,proto3" json:"finalization_time,omitempty"`
	ReportingState            ReportingState    `protobuf:"varint,27,opt,name=reporting_state,json=reportingState,proto3,enum=augur.ReportingState" json:"reporting_state,omitempty"`
	Forking                   bool              `protobuf:"varint,28,opt,name=forking,proto3" json:"forking,omitempty"`
	NeedsMigration            bool              `protobuf:"varint,29,opt,name=needs_migration,json=needsMigration,proto3" json:"needs_migration,omitempty"`
	Description               string            `protobuf:"bytes,30,opt,name=description,proto3" json:"description,omitempty"`
	Details                   string            `protobuf:"bytes,31,opt,name=details,proto3" json:"details,omitempty"`
	ScalarDenomination        string            `protobuf:"bytes,32,opt,name=scalar_denomination,json=scalarDenomination,proto3" json:"scalar_denomination,omitempty"`
	DesignatedReporter        string            `protobuf:"bytes,33,opt,name=designated_reporter,json=designatedReporter,proto3" json:"designated_reporter,omitempty"`
	DesignatedReportStake     string            `protobuf:"bytes,34,opt,name=designated_report_stake,json=designatedReportStake,proto3" json:"designated_report_stake,omitempty"`
	ResolutionSource          string            `protobuf:"bytes,35,opt,name=resolution_source,json=resolutionSource,proto3" json:"resolution_source,omitempty"`
	NumTicks                  string            `protobuf:"bytes,36,opt,name=num_ticks,json=numTicks,proto3" json:"num_ticks,omitempty"`
	TickSize                  string            `protobuf:"bytes,37,opt,name=tick_size,json=tickSize,proto3" json:"tick_size,omitempty"`
	Consensus                 *NormalizedPayout `protobuf:"bytes,38,opt,name=consensus,proto3" json:"consensus,omitempty"`
	Outcomes                  []*OutcomeInfo    `protobuf:"bytes,39,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *MarketInfo) Reset()         { *m = MarketInfo{} }
func (m *MarketInfo) String() string { return proto.CompactTextString(m) }
func (*MarketInfo) ProtoMessage()    {}
func (*MarketInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{4}
}
func (m *MarketInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketInfo.Unmarshal(m, b)
}
func (m *MarketInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketInfo.Marshal(b, m, deterministic)
}
func (dst *MarketInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketInfo.Merge(dst, src)
}
func (m *MarketInfo) XXX_Size() int {
	return xxx_messageInfo_MarketInfo.Size(m)
}
func (m *MarketInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MarketInfo proto.InternalMessageInfo

func (m *MarketInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MarketInfo) GetUniverse() string {
	if m != nil {
		return m.Universe
	}
	return ""
}

func (m *MarketInfo) GetMarketType() string {
	if m != nil {
		return m.MarketType
	}
	return ""
}

func (m *MarketInfo) GetNumOutcomes() uint32 {
	if m != nil {
		return m.NumOutcomes
	}
	return 0
}

func (m *MarketInfo) GetMinPrice() string {
	if m != nil {
		return m.MinPrice
	}
	return ""
}

func (m *MarketInfo) GetMaxPrice() string {
	if m != nil {
		return m.MaxPrice
	}
	return ""
}

func (m *MarketInfo) GetCumulativeScale() string {
	if m != nil {
		return m.CumulativeScale
	}
	return ""
}

func (m *MarketInfo) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *MarketInfo) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *MarketInfo) GetCreationBlock() uint64 {
	if m != nil {
		return m.CreationBlock
	}
	return 0
}

func (m *MarketInfo) GetCreationFee() string {
	if m != nil {
		return m.CreationFee
	}
	return ""
}

func (m *MarketInfo) GetSettlementFee() string {
	if m != nil {
		return m.SettlementFee
	}
	return ""
}

func (m *MarketInfo) GetReportingFeeRate() string {
	if m != nil {
		return m.ReportingFeeRate
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorFeeRate() string {
	if m != nil {
		return m.MarketCreatorFeeRate
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorFeesBalance() string {
	if m != nil {
		return m.MarketCreatorFeesBalance
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorMailbox() string {
	if m != nil {
		return m.MarketCreatorMailbox
	}
	return ""
}

func (m *MarketInfo) GetMarketCreatorMailboxOwner() string {
	if m != nil {
		return m.MarketCreatorMailboxOwner
	}
	return ""
}

func (m *MarketInfo) GetInitialReportSize() string {
	if m != nil {
		return m.InitialReportSize
	}
	return ""
}

func (m *MarketInfo) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *MarketInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MarketInfo) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *MarketInfo) GetOutstandingShares() string {
	if m != nil {
		return m.OutstandingShares
	}
	return ""
}

func (m *MarketInfo) GetFeeWindow() string {
	if m != nil {
		return m.FeeWindow
	}
	return ""
}

func (m *MarketInfo) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *MarketInfo) GetFinalizationBlockNumber() uint64 {
	if m != nil {
		return m.FinalizationBlockNumber
	}
	return 0
}

func (m *MarketInfo) GetFinalizationTime() uint64 {
	if m != nil {
		return m.FinalizationTime
	}
	return 0
}

func (m *MarketInfo) GetReportingState() ReportingState {
	if m != nil {
		return m.ReportingState
	}
	return ReportingState_PRE_REPORTING
}

func (m *MarketInfo) GetForking() bool {
	if m != nil {
		return m.Forking
	}
	return false
}

func (m *MarketInfo) GetNeedsMigration() bool {
	if m != nil {
		return m.NeedsMigration
	}
	return false
}

func (m *MarketInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MarketInfo) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *MarketInfo) GetScalarDenomination() string {
	if m != nil {
		return m.ScalarDenomination
	}
	return ""
}

func (m *MarketInfo) GetDesignatedReporter() string {
	if m != nil {
		return m.DesignatedReporter
	}
	return ""
}

func (m *MarketInfo) GetDesignatedReportStake() string {
	if m != nil {
		return m.DesignatedReportStake
	}
	return ""
}

func (m *MarketInfo) GetResolutionSource() string {
	if m != nil {
		return m.ResolutionSource
	}
	return ""
}

func (m *MarketInfo) GetNumTicks() string {
	if m != nil {
		return m.NumTicks
	}
	return ""
}

func (m *MarketInfo) GetTickSize() string {
	if m != nil {
		return m.TickSize
	}
	return ""
}

func (m *MarketInfo) GetConsensus() *NormalizedPayout {
	if m != nil {
		return m.Consensus
	}
	return nil
}

func (m *MarketInfo) GetOutcomes() []*OutcomeInfo {
	if m != nil {
		return m.Outcomes
	}
	return nil
}

type NormalizedPayout struct {
	IsInvalid            bool     `protobuf:"varint,1,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid,omitempty"`
	Payout               []string `protobuf:"bytes,2,rep,name=payout,proto3" json:"payout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NormalizedPayout) Reset()         { *m = NormalizedPayout{} }
func (m *NormalizedPayout) String() string { return proto.CompactTextString(m) }
func (*NormalizedPayout) ProtoMessage()    {}
func (*NormalizedPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{5}
}
func (m *NormalizedPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NormalizedPayout.Unmarshal(m, b)
}
func (m *NormalizedPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NormalizedPayout.Marshal(b, m, deterministic)
}
func (dst *NormalizedPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NormalizedPayout.Merge(dst, src)
}
func (m *NormalizedPayout) XXX_Size() int {
	return xxx_messageInfo_NormalizedPayout.Size(m)
}
func (m *NormalizedPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_NormalizedPayout.DiscardUnknown(m)
}

var xxx_messageInfo_NormalizedPayout proto.InternalMessageInfo

func (m *NormalizedPayout) GetIsInvalid() bool {
	if m != nil {
		return m.IsInvalid
	}
	return false
}

func (m *NormalizedPayout) GetPayout() []string {
	if m != nil {
		return m.Payout
	}
	return nil
}

type OutcomeInfo struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Volume               string   `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutcomeInfo) Reset()         { *m = OutcomeInfo{} }
func (m *OutcomeInfo) String() string { return proto.CompactTextString(m) }
func (*OutcomeInfo) ProtoMessage()    {}
func (*OutcomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{6}
}
func (m *OutcomeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutcomeInfo.Unmarshal(m, b)
}
func (m *OutcomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutcomeInfo.Marshal(b, m, deterministic)
}
func (dst *OutcomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutcomeInfo.Merge(dst, src)
}
func (m *OutcomeInfo) XXX_Size() int {
	return xxx_messageInfo_OutcomeInfo.Size(m)
}
func (m *OutcomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OutcomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OutcomeInfo proto.InternalMessageInfo

func (m *OutcomeInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OutcomeInfo) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *OutcomeInfo) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OutcomeInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type GetMarketsInCategoryRequest struct {
	Universe             string   `protobuf:"bytes,1,opt,name=universe,proto3" json:"universe,omitempty"`
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	IsSortDescending     string   `protobuf:"bytes,4,opt,name=is_sort_descending,json=isSortDescending,proto3" json:"is_sort_descending,omitempty"`
	Limit                string   `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               string   `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketsInCategoryRequest) Reset()         { *m = GetMarketsInCategoryRequest{} }
func (m *GetMarketsInCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetMarketsInCategoryRequest) ProtoMessage()    {}
func (*GetMarketsInCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{7}
}
func (m *GetMarketsInCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsInCategoryRequest.Unmarshal(m, b)
}
func (m *GetMarketsInCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsInCategoryRequest.Marshal(b, m, deterministic)
}
func (dst *GetMarketsInCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsInCategoryRequest.Merge(dst, src)
}
func (m *GetMarketsInCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetMarketsInCategoryRequest.Size(m)
}
func (m *GetMarketsInCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsInCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsInCategoryRequest proto.InternalMessageInfo

func (m *GetMarketsInCategoryRequest) GetUniverse() string {
	if m != nil {
		return m.Universe
	}
	return ""
}

func (m *GetMarketsInCategoryRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *GetMarketsInCategoryRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *GetMarketsInCategoryRequest) GetIsSortDescending() string {
	if m != nil {
		return m.IsSortDescending
	}
	return ""
}

func (m *GetMarketsInCategoryRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *GetMarketsInCategoryRequest) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

type GetMarketsInCategoryResponse struct {
	MarketAddresses      []string `protobuf:"bytes,1,rep,name=market_addresses,json=marketAddresses,proto3" json:"market_addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketsInCategoryResponse) Reset()         { *m = GetMarketsInCategoryResponse{} }
func (m *GetMarketsInCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetMarketsInCategoryResponse) ProtoMessage()    {}
func (*GetMarketsInCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_markets_b926102f3b40d5e0, []int{8}
}
func (m *GetMarketsInCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketsInCategoryResponse.Unmarshal(m, b)
}
func (m *GetMarketsInCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketsInCategoryResponse.Marshal(b, m, deterministic)
}
func (dst *GetMarketsInCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketsInCategoryResponse.Merge(dst, src)
}
func (m *GetMarketsInCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetMarketsInCategoryResponse.Size(m)
}
func (m *GetMarketsInCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketsInCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketsInCategoryResponse proto.InternalMessageInfo

func (m *GetMarketsInCategoryResponse) GetMarketAddresses() []string {
	if m != nil {
		return m.MarketAddresses
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMarketsRequest)(nil), "augur.GetMarketsRequest")
	proto.RegisterType((*GetMarketsResponse)(nil), "augur.GetMarketsResponse")
	proto.RegisterType((*GetMarketsInfoRequest)(nil), "augur.GetMarketsInfoRequest")
	proto.RegisterType((*GetMarketsInfoResponse)(nil), "augur.GetMarketsInfoResponse")
	proto.RegisterType((*MarketInfo)(nil), "augur.MarketInfo")
	proto.RegisterType((*NormalizedPayout)(nil), "augur.NormalizedPayout")
	proto.RegisterType((*OutcomeInfo)(nil), "augur.OutcomeInfo")
	proto.RegisterType((*GetMarketsInCategoryRequest)(nil), "augur.GetMarketsInCategoryRequest")
	proto.RegisterType((*GetMarketsInCategoryResponse)(nil), "augur.GetMarketsInCategoryResponse")
	proto.RegisterEnum("augur.ReportingState", ReportingState_name, ReportingState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MarketsApiClient is the client API for MarketsApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarketsApiClient interface {
	GetMarkets(ctx context.Context, in *GetMarketsRequest, opts ...grpc.CallOption) (*GetMarketsResponse, error)
	GetMarketsInfo(ctx context.Context, in *GetMarketsInfoRequest, opts ...grpc.CallOption) (*GetMarketsInfoResponse, error)
	GetMarketsInCategory(ctx context.Context, in *GetMarketsInCategoryRequest, opts ...grpc.CallOption) (*GetMarketsInCategoryResponse, error)
}

type marketsApiClient struct {
	cc *grpc.ClientConn
}

func NewMarketsApiClient(cc *grpc.ClientConn) MarketsApiClient {
	return &marketsApiClient{cc}
}

func (c *marketsApiClient) GetMarkets(ctx context.Context, in *GetMarketsRequest, opts ...grpc.CallOption) (*GetMarketsResponse, error) {
	out := new(GetMarketsResponse)
	err := c.cc.Invoke(ctx, "/augur.MarketsApi/GetMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketsApiClient) GetMarketsInfo(ctx context.Context, in *GetMarketsInfoRequest, opts ...grpc.CallOption) (*GetMarketsInfoResponse, error) {
	out := new(GetMarketsInfoResponse)
	err := c.cc.Invoke(ctx, "/augur.MarketsApi/GetMarketsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketsApiClient) GetMarketsInCategory(ctx context.Context, in *GetMarketsInCategoryRequest, opts ...grpc.CallOption) (*GetMarketsInCategoryResponse, error) {
	out := new(GetMarketsInCategoryResponse)
	err := c.cc.Invoke(ctx, "/augur.MarketsApi/GetMarketsInCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarketsApiServer is the server API for MarketsApi service.
type MarketsApiServer interface {
	GetMarkets(context.Context, *GetMarketsRequest) (*GetMarketsResponse, error)
	GetMarketsInfo(context.Context, *GetMarketsInfoRequest) (*GetMarketsInfoResponse, error)
	GetMarketsInCategory(context.Context, *GetMarketsInCategoryRequest) (*GetMarketsInCategoryResponse, error)
}

func RegisterMarketsApiServer(s *grpc.Server, srv MarketsApiServer) {
	s.RegisterService(&_MarketsApi_serviceDesc, srv)
}

func _MarketsApi_GetMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketsApiServer).GetMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/augur.MarketsApi/GetMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketsApiServer).GetMarkets(ctx, req.(*GetMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketsApi_GetMarketsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMarketsInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketsApiServer).GetMarketsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/augur.MarketsApi/GetMarketsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketsApiServer).GetMarketsInfo(ctx, req.(*GetMarketsInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketsApi_GetMarketsInCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMarketsInCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketsApiServer).GetMarketsInCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/augur.MarketsApi/GetMarketsInCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketsApiServer).GetMarketsInCategory(ctx, req.(*GetMarketsInCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MarketsApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "augur.MarketsApi",
	HandlerType: (*MarketsApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMarkets",
			Handler:    _MarketsApi_GetMarkets_Handler,
		},
		{
			MethodName: "GetMarketsInfo",
			Handler:    _MarketsApi_GetMarketsInfo_Handler,
		},
		{
			MethodName: "GetMarketsInCategory",
			Handler:    _MarketsApi_GetMarketsInCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "markets.proto",
}

func init() { proto.RegisterFile("markets.proto", fileDescriptor_markets_b926102f3b40d5e0) }

var fileDescriptor_markets_b926102f3b40d5e0 = []byte{
	// 1338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0x5b, 0x6f, 0xdb, 0xc6,
	0x12, 0x8e, 0xe4, 0x9b, 0x34, 0xb2, 0x64, 0x79, 0xe3, 0xcb, 0xfa, 0x92, 0x13, 0x45, 0x39, 0x39,
	0x71, 0xce, 0xc9, 0x71, 0x01, 0xb7, 0xe9, 0x43, 0x81, 0x36, 0xb0, 0x2d, 0xd9, 0x20, 0x12, 0x4b,
	0x06, 0xa5, 0xc0, 0x45, 0x5f, 0x08, 0x5a, 0x1c, 0x39, 0x0b, 0x8b, 0x4b, 0x95, 0xbb, 0x74, 0xe2,
	0xbc, 0xf7, 0x57, 0xf4, 0x1f, 0xf5, 0xb5, 0x7f, 0xa7, 0x0f, 0xc5, 0x5e, 0x28, 0x51, 0x97, 0x04,
	0xe9, 0x9b, 0x66, 0xbe, 0xf9, 0x66, 0x49, 0xee, 0x37, 0x17, 0x41, 0x39, 0xf4, 0xe3, 0x5b, 0x94,
	0xe2, 0x70, 0x18, 0x47, 0x32, 0x22, 0x4b, 0x7e, 0x72, 0x93, 0xc4, 0xf5, 0x3f, 0xf3, 0xb0, 0x7e,
	0x8e, 0xf2, 0xc2, 0x60, 0x2e, 0xfe, 0x9a, 0xa0, 0x90, 0x64, 0x17, 0x0a, 0x09, 0x67, 0x77, 0x18,
	0x0b, 0xa4, 0xb9, 0x5a, 0xee, 0xa0, 0xe8, 0x8e, 0x6c, 0x42, 0x61, 0xa5, 0x17, 0xa3, 0x2f, 0xa3,
	0x98, 0xe6, 0x35, 0x94, 0x9a, 0x8a, 0xd5, 0xf3, 0x25, 0xde, 0x44, 0xf1, 0x3d, 0x5d, 0x30, 0xac,
	0xd4, 0x26, 0xcf, 0x61, 0x2d, 0xc6, 0x61, 0x14, 0x4b, 0xc6, 0x6f, 0x3c, 0x21, 0x7d, 0x89, 0x74,
	0x51, 0x87, 0x54, 0x46, 0xee, 0x8e, 0xf2, 0x92, 0x47, 0x00, 0x7d, 0x44, 0xef, 0x03, 0xe3, 0x41,
	0xf4, 0x81, 0x2e, 0xe9, 0x98, 0x62, 0x1f, 0xf1, 0x4a, 0x3b, 0xc8, 0x37, 0xf0, 0x30, 0x40, 0xc1,
	0x6e, 0xb8, 0x2f, 0x31, 0xf0, 0x0c, 0x17, 0x63, 0xba, 0xac, 0xe3, 0xc8, 0x18, 0x72, 0x2d, 0x42,
	0xb6, 0x61, 0x45, 0x44, 0xb1, 0xf4, 0xae, 0xef, 0xe9, 0x8a, 0x0e, 0x5a, 0x56, 0xe6, 0xc9, 0x3d,
	0x79, 0x09, 0x84, 0x09, 0x4f, 0x63, 0x01, 0x8a, 0x1e, 0xf2, 0x80, 0xf1, 0x1b, 0x5a, 0xa8, 0xe5,
	0x0e, 0x0a, 0x6e, 0x95, 0x89, 0x4e, 0x14, 0xcb, 0xc6, 0xc8, 0x4f, 0x36, 0x60, 0x69, 0xc0, 0x42,
	0x26, 0x69, 0xb1, 0x96, 0x3b, 0x28, 0xbb, 0xc6, 0x20, 0x5b, 0xb0, 0x1c, 0xf5, 0xfb, 0x02, 0x25,
	0x05, 0xed, 0xb6, 0x56, 0xfd, 0x35, 0x90, 0xec, 0x47, 0x15, 0xc3, 0x88, 0x0b, 0x24, 0x2f, 0xa0,
	0x6a, 0xee, 0xc0, 0xf3, 0x83, 0x20, 0x46, 0x21, 0x50, 0xd0, 0x5c, 0x6d, 0xe1, 0xa0, 0xe8, 0xae,
	0x19, 0xff, 0x71, 0xea, 0xae, 0x9f, 0xc0, 0xe6, 0x38, 0x81, 0xc3, 0xfb, 0x51, 0x7a, 0x33, 0xf3,
	0x72, 0xe4, 0xe7, 0xe7, 0x78, 0x0b, 0x5b, 0xd3, 0x39, 0xec, 0x83, 0x1c, 0x41, 0xc9, 0x26, 0x61,
	0xbc, 0x1f, 0xe9, 0x67, 0x28, 0x1d, 0xad, 0x1f, 0x6a, 0x45, 0x1c, 0x1a, 0x82, 0x8e, 0x87, 0x70,
	0xf4, 0xbb, 0xfe, 0xfb, 0x2a, 0xc0, 0x18, 0x22, 0x15, 0xc8, 0xb3, 0xc0, 0x6a, 0x23, 0xcf, 0x82,
	0x09, 0xc5, 0xe4, 0xa7, 0x14, 0xf3, 0x78, 0x74, 0x9c, 0xbc, 0x1f, 0xa2, 0x95, 0x86, 0xcd, 0xdd,
	0xbd, 0x1f, 0x22, 0x79, 0x02, 0xab, 0x3c, 0x09, 0xbd, 0x28, 0x91, 0xbd, 0x28, 0x44, 0xa1, 0x95,
	0x51, 0x76, 0x4b, 0x3c, 0x09, 0xdb, 0xd6, 0x45, 0xf6, 0xa0, 0x18, 0x32, 0xee, 0x0d, 0x63, 0xd6,
	0x43, 0xab, 0x8a, 0x42, 0xc8, 0xf8, 0xa5, 0xb2, 0x35, 0xe8, 0x7f, 0xb4, 0xe0, 0xb2, 0x05, 0xfd,
	0x8f, 0x06, 0x7c, 0x01, 0xd5, 0x5e, 0x12, 0x26, 0x03, 0x5f, 0xb2, 0x3b, 0xf4, 0x44, 0xcf, 0x1f,
	0xa0, 0x55, 0xc2, 0xda, 0xd8, 0xdf, 0x51, 0x6e, 0x75, 0x9d, 0x7e, 0x22, 0xdf, 0x47, 0xb1, 0x96,
	0x41, 0xd1, 0xb5, 0x16, 0x79, 0x0a, 0x65, 0xad, 0x71, 0x16, 0x71, 0x4f, 0xb2, 0x10, 0xb5, 0x08,
	0x16, 0xdd, 0xd5, 0xd4, 0xd9, 0x65, 0x21, 0x92, 0x67, 0x50, 0x19, 0x05, 0x5d, 0x0f, 0xa2, 0xde,
	0xad, 0xd6, 0xc4, 0xa2, 0x3b, 0xa2, 0x9e, 0x28, 0xa7, 0x7a, 0xd7, 0x51, 0x58, 0x1f, 0x91, 0x96,
	0xf4, 0x49, 0xa5, 0xd4, 0x77, 0x86, 0x3a, 0x93, 0x40, 0x29, 0x07, 0x18, 0x22, 0x97, 0x3a, 0x68,
	0x55, 0x07, 0x95, 0xc7, 0x5e, 0x15, 0xf6, 0x12, 0xc8, 0xb8, 0xa4, 0x54, 0xcd, 0xc4, 0xaa, 0xaa,
	0xca, 0x3a, 0xb4, 0x3a, 0x42, 0xce, 0x10, 0x5d, 0x55, 0x57, 0xaf, 0x60, 0xdb, 0x5e, 0x82, 0x2d,
	0xd7, 0x31, 0xa5, 0xa2, 0x29, 0x1b, 0x06, 0x3e, 0x35, 0x68, 0x4a, 0xfb, 0x11, 0xf6, 0x66, 0x69,
	0xc2, 0xbb, 0xf6, 0x07, 0x3e, 0xef, 0x21, 0x5d, 0xd3, 0x54, 0x3a, 0x4d, 0x15, 0x27, 0x06, 0x27,
	0xdf, 0xc1, 0xd6, 0x14, 0x3d, 0xf4, 0xd9, 0xe0, 0x3a, 0xfa, 0x48, 0xab, 0x73, 0x0e, 0xbd, 0x30,
	0x18, 0x79, 0x0d, 0xfb, 0xf3, 0x59, 0x5e, 0xf4, 0x81, 0x63, 0x4c, 0xd7, 0x35, 0x77, 0x67, 0x1e,
	0xb7, 0xad, 0x02, 0xc8, 0x21, 0x3c, 0x64, 0x9c, 0x49, 0xe6, 0x0f, 0x6c, 0x8b, 0xf0, 0x04, 0xfb,
	0x84, 0x94, 0x68, 0xde, 0xba, 0x85, 0x4c, 0x8b, 0xe8, 0xb0, 0x4f, 0x38, 0xd1, 0xb9, 0x1e, 0x4e,
	0x75, 0x2e, 0x02, 0x8b, 0xd2, 0xbf, 0x11, 0x74, 0x43, 0x57, 0x99, 0xfe, 0xad, 0x84, 0x72, 0x17,
	0x0d, 0x92, 0x10, 0xe9, 0xa6, 0x11, 0x8a, 0xb1, 0xc8, 0xff, 0x81, 0x44, 0x89, 0x14, 0xd2, 0xd7,
	0x4d, 0xc3, 0x13, 0xef, 0xfd, 0x18, 0x05, 0xdd, 0x32, 0xc7, 0x66, 0x90, 0x8e, 0x06, 0xa6, 0x7a,
	0xdd, 0xf6, 0x74, 0xaf, 0xdb, 0x81, 0x02, 0xf2, 0xc0, 0x28, 0x8e, 0x6a, 0x2d, 0xad, 0x20, 0x0f,
	0xb4, 0xd8, 0x7e, 0x80, 0x9d, 0x3e, 0xe3, 0xfe, 0x80, 0x7d, 0xca, 0x08, 0xce, 0xe3, 0x49, 0x78,
	0x8d, 0x31, 0xdd, 0xd1, 0xb1, 0xdb, 0xd9, 0x00, 0xad, 0xbd, 0x96, 0x86, 0xc9, 0xff, 0x60, 0x7d,
	0x82, 0xab, 0xf3, 0xef, 0x6a, 0x4e, 0x35, 0x0b, 0xe8, 0x83, 0x7e, 0x9a, 0xed, 0xdb, 0x7b, 0xb5,
	0xdc, 0x41, 0xe5, 0x68, 0xd3, 0xb6, 0x0b, 0x77, 0xa2, 0x7d, 0xcf, 0xb4, 0x73, 0x0a, 0x2b, 0xfd,
	0x28, 0xbe, 0x55, 0xad, 0x75, 0x5f, 0xb7, 0xd6, 0xd4, 0x54, 0x13, 0x81, 0x23, 0x06, 0xc2, 0x0b,
	0xd9, 0x4d, 0xac, 0x0f, 0xa4, 0x8f, 0x74, 0x44, 0x45, 0xbb, 0x2f, 0x52, 0x2f, 0xa9, 0x41, 0x49,
	0x35, 0xe8, 0x98, 0x0d, 0x75, 0xd0, 0xbf, 0x4c, 0xc1, 0x64, 0x5c, 0xea, 0x90, 0x00, 0xa5, 0xcf,
	0x06, 0x82, 0x3e, 0x36, 0x23, 0xc9, 0x9a, 0x6a, 0x5c, 0xa8, 0x8a, 0xf7, 0x63, 0x2f, 0x40, 0x1e,
	0x85, 0x8c, 0x9b, 0x83, 0x6a, 0x66, 0x5c, 0x18, 0xa8, 0x91, 0x41, 0x3e, 0x37, 0x5f, 0x9e, 0x7c,
	0x76, 0xbe, 0x7c, 0x0f, 0xdb, 0x33, 0x04, 0xf5, 0xa1, 0x6e, 0x91, 0xd6, 0x35, 0x69, 0x73, 0x9a,
	0xd4, 0x51, 0xa0, 0xba, 0x85, 0x18, 0x45, 0x34, 0x48, 0xf4, 0x1d, 0x88, 0x28, 0x89, 0x7b, 0x48,
	0x9f, 0xa6, 0xc5, 0x9b, 0x02, 0x1d, 0xed, 0x57, 0x0d, 0x4e, 0x35, 0x48, 0xc9, 0x7a, 0xb7, 0x82,
	0xfe, 0xdb, 0x08, 0x94, 0x27, 0x61, 0x57, 0xd9, 0x0a, 0x54, 0x80, 0x91, 0xf8, 0x33, 0x03, 0x2a,
	0x87, 0x56, 0xf6, 0x2b, 0x28, 0xf6, 0x54, 0xcf, 0xe7, 0x22, 0x11, 0xf4, 0x3f, 0xb5, 0xdc, 0x41,
	0xe9, 0x68, 0xdb, 0xde, 0x5c, 0x2b, 0x8a, 0x43, 0x75, 0xd9, 0x18, 0x5c, 0xfa, 0xf7, 0x51, 0x22,
	0xdd, 0x71, 0x24, 0x39, 0x84, 0xc2, 0xa8, 0x1b, 0x3f, 0xd7, 0xe3, 0x81, 0x58, 0x96, 0xed, 0xc8,
	0x7a, 0x3e, 0x8c, 0x62, 0xea, 0x0e, 0x54, 0xa7, 0xd3, 0x29, 0x75, 0x33, 0xe1, 0x31, 0x7e, 0xe7,
	0x0f, 0xec, 0xa8, 0x28, 0xb8, 0x45, 0x26, 0x1c, 0xe3, 0x50, 0x35, 0x34, 0xd4, 0x81, 0x76, 0x7e,
	0x59, 0xab, 0x1e, 0x42, 0x29, 0x73, 0x46, 0x66, 0xd0, 0x2c, 0xea, 0x41, 0x33, 0x2e, 0xbd, 0xfc,
	0x44, 0xe9, 0x6d, 0xc0, 0x92, 0xe9, 0xff, 0x66, 0xbc, 0x18, 0x63, 0x5a, 0x3b, 0x8b, 0x33, 0xda,
	0xa9, 0xff, 0x91, 0x83, 0xbd, 0xec, 0x98, 0x3c, 0xb5, 0x75, 0xff, 0x35, 0xab, 0x50, 0xb6, 0x6d,
	0xe4, 0xa7, 0xda, 0x46, 0x66, 0xef, 0x58, 0xf8, 0x8a, 0xbd, 0xc3, 0x3c, 0xd9, 0x17, 0xf6, 0x0e,
	0x33, 0xf3, 0x66, 0xf6, 0x0e, 0x33, 0xed, 0xd2, 0xbd, 0xc3, 0x81, 0xfd, 0xf9, 0xef, 0xf2, 0x8f,
	0x37, 0x90, 0xff, 0xfe, 0x95, 0x83, 0xca, 0x64, 0x6d, 0x93, 0x75, 0x28, 0x5f, 0xba, 0x4d, 0xcf,
	0x6d, 0x5e, 0xb6, 0xdd, 0xae, 0xd3, 0x3a, 0xaf, 0x3e, 0x20, 0x14, 0x36, 0x1a, 0xcd, 0x8e, 0x73,
	0xde, 0x3a, 0xee, 0x36, 0x1b, 0x19, 0x24, 0x47, 0x08, 0x54, 0xda, 0x97, 0xcd, 0x56, 0xc6, 0x97,
	0x27, 0x3b, 0xb0, 0x79, 0xea, 0xb6, 0xaf, 0x1a, 0x9d, 0xf6, 0x3b, 0xf7, 0xd4, 0x69, 0x9d, 0x7b,
	0x0d, 0xa7, 0x73, 0xf9, 0xae, 0xdb, 0xac, 0x2e, 0xa8, 0x44, 0xc7, 0x57, 0xc7, 0x8e, 0x0a, 0xf4,
	0x5a, 0xcd, 0x9f, 0xbb, 0xde, 0x95, 0xd3, 0x6a, 0xb4, 0xaf, 0xaa, 0x8b, 0x8a, 0x34, 0x42, 0xce,
	0x9c, 0xd6, 0xf1, 0x5b, 0xe7, 0x97, 0xe3, 0xae, 0xd3, 0x6e, 0x55, 0x97, 0x48, 0x19, 0x8a, 0xd6,
	0xd3, 0x6c, 0x54, 0x97, 0x49, 0x09, 0x56, 0xce, 0xda, 0xee, 0x1b, 0x75, 0xd6, 0x0a, 0xa9, 0xc1,
	0xfe, 0x38, 0x61, 0xdb, 0x3e, 0x86, 0x77, 0xe1, 0x9c, 0xbb, 0x86, 0x5d, 0x20, 0x7b, 0xb0, 0x3d,
	0x4e, 0xdc, 0x76, 0xdf, 0x64, 0xc0, 0xe2, 0xd1, 0x6f, 0xf9, 0x74, 0xdd, 0x11, 0xc7, 0x43, 0x46,
	0x4e, 0x01, 0xc6, 0x1f, 0x96, 0x50, 0x5b, 0x0b, 0x33, 0x8b, 0xf3, 0xee, 0xce, 0x1c, 0xc4, 0x7c,
	0xfb, 0xfa, 0x03, 0xd2, 0x86, 0xca, 0xe4, 0x42, 0x46, 0xf6, 0x67, 0xc2, 0x33, 0xbb, 0xde, 0xee,
	0xa3, 0xcf, 0xa0, 0xa3, 0x84, 0x3e, 0x6c, 0xcc, 0xbb, 0x6e, 0x52, 0x9f, 0x43, 0x9c, 0xd2, 0xf5,
	0xee, 0xd3, 0x2f, 0xc6, 0xa4, 0x47, 0x5c, 0x2f, 0xeb, 0x7f, 0x0b, 0xdf, 0xfe, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0xdb, 0xed, 0xb8, 0xc8, 0x3e, 0x0c, 0x00, 0x00,
}
